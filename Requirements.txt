# to load dataset
import pandas as pd
from sklearn.datasets import load_files       
from keras.utils import np_utils
import numpy as np
from glob import glob
import random

# to load OpenCV's implementation of Haar feature-based cascade classifiers 
import cv2                
import matplotlib.pyplot as plt                        
%matplotlib inline   

# to load pre-trained ResNet-50 model to detect dogs in images
from keras.applications.resnet50 import ResNet50

# to pre-process image data
from keras.preprocessing import image                  
from tqdm import tqdm

# to make Predictions with ResNet-50
from keras.applications.resnet50 import preprocess_input, decode_predictions

# to pre-process data 
from PIL import ImageFile   

# IMPORTANT: to create CNN architecture
from keras.layers import Conv2D, MaxPooling2D, GlobalAveragePooling2D
from keras.layers import Dropout, Flatten, Dense
from keras.models import Sequential
from keras.layers.normalization import BatchNormalization

# to train the model
from keras.callbacks import ModelCheckpoint  

# to extract bottleneck feature and then predict with model
from extract_bottleneck_features import *

# (Optional) to download the missing data/sample image
import requests 

# (Optional) to load and show picture
from PIL import Image
 
